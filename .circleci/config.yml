# Check https://circleci.com/docs/2.0/configuration-reference/ for more details
version: 2.1

orbs:
  go: circleci/go@1.5.0

jobs:
  lint:
    docker:
      - image: "golangci/golangci-lint:v1.36"

    steps:
      - checkout
      - run: golangci-lint run -v

  preflight:
    executor:
      name: go/default
      tag: '1.15'

    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: go vet -tests=false ./...
      - go/test

  build_omni:
    executor:
      name: go/default
      tag: '1.15'

    steps:
      - checkout
      - go/load-cache
      - run: scripts/build_linux.sh /tmp
      - run: scripts/build_mac_win.sh /tmp

  build_linux:
    executor:
      name: go/default
      tag: '1.15'

    steps:
      - checkout
      - go/load-cache
      - run: mkdir -p /var/tmp/build
      - run: scripts/build_linux.sh /var/tmp/build
      - persist_to_workspace:
          root: /var/tmp/build
          paths:
            - .

  package_linux:
    docker:
      - image: 'cimg/ruby:2.7'

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install -y upx alien
      - run: gem install fpm
      - attach_workspace:
          at: /var/tmp/package
      - run: mkdir -p /var/tmp/package/artifacts
      - run: scripts/package_linux.sh /var/tmp/package
      - persist_to_workspace:
         root: /var/tmp/package
         paths:
           - artifacts/

  build_mac_win:
    executor:
      name: go/default
      tag: '1.15'

    steps:
      - checkout
      - go/load-cache
      - run: mkdir -p /var/tmp/build
      - run: scripts/build_mac_win.sh /var/tmp/build
      - persist_to_workspace:
          root: /var/tmp/build
          paths:
            - .

  # If we ever want to release MacOS packages, we'll need to run it on a macos executor.
  # For now, use docker and just release zips
  package_mac_win:
    docker:
      - image: alpine:3

    steps:
      - checkout
      - run: apk add --no-cache zip upx bash git
      - attach_workspace:
          at: /var/tmp/package
      - run: mkdir -p /var/tmp/package/artifacts
      - run: scripts/package_mac_win.sh /var/tmp/package
      - persist_to_workspace:
         root: /var/tmp/package
         paths:
           - artifacts/

  release:
    docker:
      - image: alpine:3

    steps:
      - checkout
      - run: apk add --no-cache bash git
      - attach_workspace:
          at: /var/tmp/release
      - run: scripts/release.sh /var/tmp/release/artifacts

workflows:
  version: 2

  # See https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag for explanation why we need filters
  # So far we don't have a 'requires' in build for lint, maybe something to change? I mean, who doesn't like clean code?
  build_and_test:
    jobs:
      - lint:
          filters: &ci-filter
            tags:
              ignore: /.*/
      - preflight:
          filters:
            <<: *ci-filter
      - build_omni:
          filters:
            <<: *ci-filter
          requires:
            - preflight

  release:
    jobs:
      - preflight:
          filters: &release-filter
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+/
      - build_linux:
          filters:
            <<: *release-filter
          requires:
            - preflight
      - package_linux:
          filters:
            <<: *release-filter
          requires:
            - build_linux
      - build_mac_win:
          filters:
            <<: *release-filter
          requires:
            - preflight
      - package_mac_win:
          filters:
            <<: *release-filter
          requires:
            - build_mac_win
      - release:
          filters:
            <<: *release-filter
          requires:
            - package_linux
            - package_mac_win